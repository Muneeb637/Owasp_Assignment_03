# H2 + JPA
spring.datasource.url=jdbc:h2:mem:apilab;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true

# WARNING: This JWT secret should be loaded from an environment variable (e.g., APP_JWT_SECRET)
# Do NOT hardcode a weak secret in production! Use a strong, randomly generated key.
# For local testing/development, you might use a placeholder, but ensure it's not committed.
app.jwt.secret=your_strong_jwt_secret_from_env_variable

# FIX: Shorten token lifetime (TTL) to reduce the window of attack if a token is compromised.
# Example: 15 minutes (900 seconds)
app.jwt.ttl-seconds=900

# Rate limiting configuration (defaults for main application)
app.rate.limit.capacity=100
app.rate.limit.refill-duration-seconds=60
app.rate.limit.refill-tokens=100

# FIX (API7): Reduce error detail returned to clients in production.
# Recommended: Set to 'never' or remove for production deployments.
# For local development, 'on_param' or 'always' might be useful, but never in production.
server.error.include-message=never
server.error.include-stacktrace=never

logging.level.root
